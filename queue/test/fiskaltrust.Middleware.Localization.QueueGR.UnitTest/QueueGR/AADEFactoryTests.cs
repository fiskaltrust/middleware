using System.Security.Cryptography;
using System.Text;
using FluentAssertions;
using Xunit;

namespace fiskaltrust.Middleware.Localization.QueueGR.UnitTest
{
    [Trait("only", "local")]
    public class AADEFactoryTests
    {
        [Theory]
        [InlineData("802035962-2024-10-22-0-11.1-013-2866", "FBA6C7EA5A018D27C94CAFC5A521F6A3259EF0C1")]
        [InlineData("800739773-2024-11-01-0-11.1-1253-111002", "B96A69F6054CACCFC9958A0B4757CF2A1A3A76AA")]
        [InlineData("062062972-2024-10-08-0-2.1-0-2970", "40F3AB32183CFBF7F91F5C1A4831E71EA5769792")]
        [InlineData("094036033-2024-11-07-2-1.1-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-1.2-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-1.3-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-1.4-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-1.5-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-1.6-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-2.1-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-2.2-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-2.3-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-2.4-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-3.1-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-3.2-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-5.1-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-5.2-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-6.1-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-6.2-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-7.1-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-8.1-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-8.2-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-8.3-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-8.4-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-8.5-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-11.1-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-11.2-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-11.3-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-11.4-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-11.5-0-69489", "0CEBA664CD73B1942057E34B7ECD4EE8A65CCD70")]
        [InlineData("094036033-2024-11-07-2-8.2-0-62840", "908E133E5B9677D438A3BBF388BD9967670E735D")]
        public void CompareHash(string data, string hash)
        {
            var actualHash = GetUid(data);
            actualHash.Should().Be(hash);
        }

        [Fact]
        public void sd()
        {

            for (var i = 0; i < 10000; i++)
            {
                var dta = GetUid($"094036033-2024-11-07-{i}-8.2-0-62840");
                if (dta == "908E133E5B9677D438A3BBF388BD9967670E735D")
                {

                }
                if (dta == "CA6B78319805B8B5B020A339430725B18A87DA4D")
                {

                }
            }

        }


        public string GetUid(string data) => BitConverter.ToString(SHA1.HashData(Encoding.UTF8.GetBytes(data))).Replace("-", "");
    }
}


/**
 * Case 1:
 * **/