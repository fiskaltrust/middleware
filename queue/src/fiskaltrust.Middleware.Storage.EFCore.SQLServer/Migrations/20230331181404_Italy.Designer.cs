// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fiskaltrust.Middleware.Storage.EFCore.SQLServer;

namespace fiskaltrust.Middleware.Storage.EFCore.SQLServer.Migrations
{
    [DbContext(typeof(SQLServerMiddlewareDbContext))]
    [Migration("20230331181404_Italy")]
    partial class Italy
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("fiskaltrust.Middleware.Contracts.Models.Transactions.FailedFinishTransaction", b =>
                {
                    b.Property<long?>("TransactionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CashBoxIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinishMoment")
                        .HasColumnType("datetime2");

                    b.Property<string>("Request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cbReceiptReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ftQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TransactionNumber");

                    b.ToTable("FailedFinishTransaction");
                });

            modelBuilder.Entity("fiskaltrust.Middleware.Contracts.Models.Transactions.FailedStartTransaction", b =>
                {
                    b.Property<Guid>("ftQueueItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CashBoxIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartMoment")
                        .HasColumnType("datetime2");

                    b.Property<string>("cbReceiptReference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ftQueueItemId");

                    b.ToTable("FailedStartTransaction");
                });

            modelBuilder.Entity("fiskaltrust.Middleware.Contracts.Models.Transactions.OpenTransaction", b =>
                {
                    b.Property<long>("TransactionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("StartMoment")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartTransactionSignatureBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cbReceiptReference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionNumber");

                    b.ToTable("OpenTransaction");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.MasterData.AccountMasterData", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VatId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("AccountMasterData");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.MasterData.AgencyMasterData", b =>
                {
                    b.Property<Guid>("AgencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VatId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgencyId");

                    b.ToTable("AgencyMasterData");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.MasterData.OutletMasterData", b =>
                {
                    b.Property<Guid>("OutletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutletName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VatId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OutletId");

                    b.ToTable("OutletMasterData");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.MasterData.PosSystemMasterData", b =>
                {
                    b.Property<Guid>("PosSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BaseCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PosSystemId");

                    b.ToTable("PosSystemMasterData");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftActionJournal", b =>
                {
                    b.Property<Guid>("ftActionJournalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DataBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Moment")
                        .HasColumnType("datetime2");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ftQueueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ftQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ftActionJournalId");

                    b.HasIndex("TimeStamp");

                    b.ToTable("ftActionJournal");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftCashBox", b =>
                {
                    b.Property<Guid>("ftCashBoxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.HasKey("ftCashBoxId");

                    b.ToTable("ftCashBox");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftJournalAT", b =>
                {
                    b.Property<Guid>("ftJournalATId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JWSHeaderBase64url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JWSPayloadBase64url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JWSSignatureBase64url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ftQueueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ftSignaturCreationUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ftJournalATId");

                    b.HasIndex("TimeStamp");

                    b.ToTable("ftJournalAT");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftJournalDE", b =>
                {
                    b.Property<Guid>("ftJournalDEId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileContentBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ftQueueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ftQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ftJournalDEId");

                    b.HasIndex("TimeStamp");

                    b.ToTable("ftJournalDE");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftJournalFR", b =>
                {
                    b.Property<Guid>("ftJournalFRId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JWT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<string>("ReceiptType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ftQueueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ftQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ftJournalFRId");

                    b.HasIndex("TimeStamp");

                    b.ToTable("ftJournalFR");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftJournalIT", b =>
                {
                    b.Property<Guid>("ftJournalITId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DataJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("JournalType")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReceiptDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ReceiptNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<long>("ZRepNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("cbReceiptReference")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("ftQueueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ftQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ftSignaturCreationUnitITId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ftJournalITId");

                    b.HasIndex("TimeStamp");

                    b.HasIndex("cbReceiptReference");

                    b.ToTable("ftJournalIT");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftJournalME", b =>
                {
                    b.Property<Guid>("ftJournalMEId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FCDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("JournalType")
                        .HasColumnType("bigint");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<int>("YearlyOrdinalNumber")
                        .HasColumnType("int");

                    b.Property<string>("cbReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ftQueueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ftQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ftJournalMEId");

                    b.ToTable("ftJournalME");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftQueue", b =>
                {
                    b.Property<Guid>("ftQueueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartMoment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StopMoment")
                        .HasColumnType("datetime2");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<int>("Timeout")
                        .HasColumnType("int");

                    b.Property<Guid>("ftCashBoxId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ftCurrentRow")
                        .HasColumnType("bigint");

                    b.Property<long>("ftQueuedRow")
                        .HasColumnType("bigint");

                    b.Property<string>("ftReceiptHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ftReceiptNumerator")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ftReceiptTotalizer")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ftQueueId");

                    b.ToTable("ftQueue");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftQueueAT", b =>
                {
                    b.Property<Guid>("ftQueueATId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CashBoxIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClosedSystemKind")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClosedSystemNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClosedSystemValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncryptionKeyBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSettlementMoment")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastSettlementMonth")
                        .HasColumnType("int");

                    b.Property<Guid?>("LastSettlementQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastSignatureCertificateSerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastSignatureHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastSignatureZDA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessageCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MessageMoment")
                        .HasColumnType("datetime2");

                    b.Property<int>("SSCDFailCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SSCDFailMessageSent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SSCDFailMoment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SSCDFailQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("SignAll")
                        .HasColumnType("bit");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<int>("UsedFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UsedFailedMomentMax")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UsedFailedMomentMin")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UsedFailedQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UsedMobileCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UsedMobileMoment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UsedMobileQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ftCashNumerator")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ftCashTotalizer")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ftQueueATId");

                    b.ToTable("ftQueueAT");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftQueueDE", b =>
                {
                    b.Property<Guid>("ftQueueDEId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CashBoxIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DailyClosingNumber")
                        .HasColumnType("int");

                    b.Property<string>("LastHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SSCDFailCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SSCDFailMoment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SSCDFailQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<int>("UsedFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UsedFailedMomentMax")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UsedFailedMomentMin")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UsedFailedQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ftSignaturCreationUnitDEId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ftQueueDEId");

                    b.ToTable("ftQueueDE");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftQueueFR", b =>
                {
                    b.Property<Guid>("ftQueueFRId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ACITotalNormal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ACITotalReduced1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ACITotalReduced2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ACITotalReducedS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ACITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ACITotalZero")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ALastHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ALastMoment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ALastQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ANumerator")
                        .HasColumnType("bigint");

                    b.Property<decimal>("APITotalCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("APITotalInternal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("APITotalNonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("APITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ATotalizer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BCITotalNormal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BCITotalReduced1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BCITotalReduced2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BCITotalReducedS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BCITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BCITotalZero")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BLastHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("BNumerator")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BPITotalCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BPITotalInternal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BPITotalNonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BPITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BTotalizer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CLastHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CNumerator")
                        .HasColumnType("bigint");

                    b.Property<decimal>("CTotalizer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CashBoxIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GDayCITotalNormal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GDayCITotalReduced1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GDayCITotalReduced2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GDayCITotalReducedS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GDayCITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GDayCITotalZero")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GDayPITotalCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GDayPITotalInternal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GDayPITotalNonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GDayPITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GDayTotalizer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("GLastDayMoment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GLastDayQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLastHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GLastMonthMoment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GLastMonthQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("GLastShiftMoment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GLastShiftQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("GLastYearMoment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GLastYearQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GMonthCITotalNormal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GMonthCITotalReduced1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GMonthCITotalReduced2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GMonthCITotalReducedS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GMonthCITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GMonthCITotalZero")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GMonthPITotalCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GMonthPITotalInternal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GMonthPITotalNonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GMonthPITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GMonthTotalizer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("GNumerator")
                        .HasColumnType("bigint");

                    b.Property<decimal>("GShiftCITotalNormal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GShiftCITotalReduced1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GShiftCITotalReduced2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GShiftCITotalReducedS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GShiftCITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GShiftCITotalZero")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GShiftPITotalCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GShiftPITotalInternal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GShiftPITotalNonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GShiftPITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GShiftTotalizer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GYearCITotalNormal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GYearCITotalReduced1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GYearCITotalReduced2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GYearCITotalReducedS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GYearCITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GYearCITotalZero")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GYearPITotalCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GYearPITotalInternal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GYearPITotalNonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GYearPITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GYearTotalizer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ICITotalNormal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ICITotalReduced1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ICITotalReduced2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ICITotalReducedS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ICITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ICITotalZero")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ILastHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("INumerator")
                        .HasColumnType("bigint");

                    b.Property<decimal>("IPITotalCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IPITotalInternal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IPITotalNonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IPITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ITotalizer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LLastHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LNumerator")
                        .HasColumnType("bigint");

                    b.Property<int>("MessageCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MessageMoment")
                        .HasColumnType("datetime2");

                    b.Property<string>("PLastHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PNumerator")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PPITotalCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PPITotalInternal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PPITotalNonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PPITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PTotalizer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Siret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TCITotalNormal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TCITotalReduced1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TCITotalReduced2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TCITotalReducedS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TCITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TCITotalZero")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TLastHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TNumerator")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TPITotalCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TPITotalInternal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TPITotalNonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TPITotalUnknown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TTotalizer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<int>("UsedFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UsedFailedMomentMax")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UsedFailedMomentMin")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UsedFailedQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("XLastHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("XNumerator")
                        .HasColumnType("bigint");

                    b.Property<decimal>("XTotalizer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ftSignaturCreationUnitFRId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ftQueueFRId");

                    b.ToTable("ftQueueFR");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftQueueIT", b =>
                {
                    b.Property<Guid>("ftQueueITId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CashBoxIdentification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SSCDFailCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SSCDFailMoment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SSCDFailQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<int>("UsedFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UsedFailedMomentMax")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UsedFailedMomentMin")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UsedFailedQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ftSignaturCreationUnitITId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ftQueueITId");

                    b.ToTable("ftQueueIT");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftQueueItem", b =>
                {
                    b.Property<Guid>("ftQueueItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("cbReceiptMoment")
                        .HasColumnType("datetime2");

                    b.Property<string>("cbReceiptReference")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cbTerminalID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ftDoneMoment")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ftQueueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ftQueueMoment")
                        .HasColumnType("datetime2");

                    b.Property<long>("ftQueueRow")
                        .HasColumnType("bigint");

                    b.Property<int>("ftQueueTimeout")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ftWorkMoment")
                        .HasColumnType("datetime2");

                    b.Property<string>("request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requestHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responseHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ftQueueItemId");

                    b.HasIndex("TimeStamp");

                    b.HasIndex("cbReceiptReference");

                    b.ToTable("ftQueueItem");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftQueueME", b =>
                {
                    b.Property<Guid>("ftQueueMEId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DailyClosingNumber")
                        .HasColumnType("int");

                    b.Property<string>("LastHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SSCDFailCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SSCDFailMoment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SSCDFailQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<int>("UsedFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UsedFailedMomentMax")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UsedFailedMomentMin")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UsedFailedQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ftSignaturCreationUnitMEId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ftQueueMEId");

                    b.ToTable("ftQueueME");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftReceiptJournal", b =>
                {
                    b.Property<Guid>("ftReceiptJournalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ftQueueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ftQueueItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ftReceiptHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ftReceiptMoment")
                        .HasColumnType("datetime2");

                    b.Property<long>("ftReceiptNumber")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ftReceiptTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ftReceiptJournalId");

                    b.HasIndex("TimeStamp");

                    b.ToTable("ftReceiptJournal");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftSignaturCreationUnitAT", b =>
                {
                    b.Property<Guid>("ftSignaturCreationUnitATId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CertificateBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mode")
                        .HasColumnType("int");

                    b.Property<string>("SN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZDA")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ftSignaturCreationUnitATId");

                    b.ToTable("ftSignaturCreationUnitAT");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftSignaturCreationUnitDE", b =>
                {
                    b.Property<Guid>("ftSignaturCreationUnitDEId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Mode")
                        .HasColumnType("int");

                    b.Property<string>("ModeConfigurationJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<string>("TseInfoJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ftSignaturCreationUnitDEId");

                    b.ToTable("ftSignaturCreationUnitDE");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftSignaturCreationUnitFR", b =>
                {
                    b.Property<Guid>("ftSignaturCreationUnitFRId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CertificateBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificateSerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.HasKey("ftSignaturCreationUnitFRId");

                    b.ToTable("ftSignaturCreationUnitFR");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftSignaturCreationUnitIT", b =>
                {
                    b.Property<Guid>("ftSignaturCreationUnitITId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InfoJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ftSignaturCreationUnitITId");

                    b.ToTable("ftSignaturCreationUnitIT");
                });

            modelBuilder.Entity("fiskaltrust.storage.V0.ftSignaturCreationUnitME", b =>
                {
                    b.Property<Guid>("ftSignaturCreationUnitMEId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessUnitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuerTin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaintainerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcrCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcrIntId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("ftSignaturCreationUnitMEId");

                    b.ToTable("ftSignaturCreationUnitME");
                });
#pragma warning restore 612, 618
        }
    }
}
