steps:
- powershell: |
    $nugetFeed = if ($Env:BUILD_SOURCEBRANCH.StartsWith("refs/heads/release/") -or $Env:BUILD_SOURCEBRANCH.StartsWith("refs/heads/main") -or $Env:BUILD_SOURCEBRANCH.StartsWith("refs/tags/")) { "release" } else { "dev" }
    Write-Host "##vso[task.setvariable variable=NuGetFeed;]$nugetFeed"
  displayName: Set NuGet feed

- task: Cache@2
  inputs:
    key: 'nuget | "$(Agent.OS)" | scu-de/**/*.csproj'
    restoreKeys: |
      nuget | "$(Agent.OS)"
      nuget
    path: $(UserProfile)/.nuget/packages
  displayName: Cache NuGet packages

- pwsh: 'echo $Env:ANDROID_SDK_ROOT'
  displayName: List files

- pwsh: 'ls "${Env:ANDROID_SDK_ROOT}\cmdline-tools\latest\bin"'
  displayName: List files

- pwsh: sdkmanager "platforms;android-28"

- pwsh: |
    & ${Env:ANDROID_SDK_ROOT}\cmdline-tools\latest\bin\sdkmanager.exe "platforms;android-28"

- pwsh: sdkmanager "platforms;android-28"

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '$(WorkingDirectory)/$(Solution)'
    feedsToUse: 'select'
    vstsFeed: '$(NuGetFeed)'

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

- task: VSBuild@1
  inputs:
    solution: '$(WorkingDirectory)/$(Solution)'
    configuration: '$(BuildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: |
      $(WorkingDirectory)/**/*.UnitTest.csproj
    arguments: '--configuration $(BuildConfiguration) --no-restore --collect "Code coverage"'
    nobuild: true
  displayName: 'Run unit tests'   

