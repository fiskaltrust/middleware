parameters:
- name: apikey
  type: string
- name: apisecret
  type: string
- name: apiuri
  default: https://kassensichv-middleware.fiskaly.com/api/v2
  type: string

steps:
- pwsh: |
    $body = @{
      "api_key" = "${{ parameters.apikey }}"; 
      "api_secret" = "${{ parameters.apisecret }}";
    } | ConvertTo-Json
    $headers = @{ "Content-Type" = "application/json" }
    $response = Invoke-WebRequest -Method POST -Uri ${{ parameters.apiuri }}/auth -Headers $headers -Body $body -UseBasicParsing  | ConvertFrom-Json
    
    $default = @{
      "Authentication" = "Bearer";
      "Token" = $(ConvertTo-SecureString $response.access_token -AsPlainText);
      "Headers" = $headers;
    }

    $response = Invoke-WebRequest @default -Method PUT -Uri ${{ parameters.apiuri }}/tss/$([guid]::NewGuid()) -Body "{}" -UseBasicParsing 

    if($response.StatusCode -ne 200) {
      throw "Could not create TSS"
    }

    $tss = $response | ConvertFrom-Json
    Set-Content -Path "$(Build.SourcesDirectory)/logs/tss.json" -Value $response -Encoding utf8

    $body = @{
      "state" = "UNINITIALIZED";
    } | ConvertTo-Json

    $response = Invoke-WebRequest @default -Method PATCH -Uri ${{ parameters.apiuri }}/tss/$($tss._id) -Body $body -UseBasicParsing 

    if($response.StatusCode -ne 200) {
      throw "Could not update TSS state"
    }

    $body = @{
      "admin_puk" = $tss.admin_puk;
      "new_admin_pin" = "abc123";
    } | ConvertTo-Json

    $response = Invoke-WebRequest @default -Method PATCH -Uri ${{ parameters.apiuri }}/tss/$($tss._id)/admin -Body $body -UseBasicParsing 

    if($response.StatusCode -ne 200) {
      throw "Could not set admin_pin"
    }


    $configuration = [String]$(Get-Content $(Build.SourcesDirectory)/launcher/configuration.json -Encoding utf8) | ConvertFrom-Json

    $configuration.ftSignaturCreationDevices[0].Configuration = @{
      "TssId" = $tss._id;
      "ApiKey" = "${{ parameters.apikey }}";
      "ApiSecret" = "${{ parameters.apisecret }}";
      "AdminPin" = "abc123";
    }

    ConvertTo-Json $configuration -Depth 100 | Set-Content -Path $(Build.SourcesDirectory)/launcher/configuration.json -Encoding utf8
  displayName: Create FiskalyCertified
