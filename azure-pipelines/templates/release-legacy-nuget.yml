parameters:
- name: stages
  type: stageList

- name: type
  type: string

- name: feed
  type: string

- name: artifact
  type: string
  default: current

- name: projects
  type: object

stages:
- ${{ each project in parameters.projects }}:
  - ${{ each stage in parameters.stages }}:
    - ${{ each pair in stage }}:
        ${{ if eq(pair.key, 'stage') }}:
          stage: ${{ pair.value }}_${{ project }}
        ${{ else }}:
          ${{ pair.key }}: ${{ pair.value }}
      
      displayName: ${{ stage.templateContext.environment }} ${{ project }}

      ${{ if ne(stage.templateContext.dependsOnPrefix, '') }}:
        dependsOn: ${{ stage.templateContext.dependsOnPrefix }}_${{ replace(project, '.', '_') }}

      ${{ if eq(stage.templateContext.environment, 'production-legacy') }}:
        condition: and(startsWith(variables['Build.SourceBranch'], 'refs/tags/'), contains(variables['Build.SourceBranch'], lower('/${{ project }}/v')))
      ${{ else }}:
        condition: or(not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')), and(startsWith(variables['Build.SourceBranch'], 'refs/tags/'), contains(variables['Build.SourceBranch'], lower('/${{ project }}/v'))))

      jobs:
        - deployment: Release

          pool:
            vmImage: windows-latest

          environment: ${{ stage.templateContext.serviceConnection }}

          strategy:
            runOnce:
              deploy:
                steps:
                  - download: ${{ parameters.artifact }}
                    artifact: packages-v1
                    displayName: "Download artifact"

                  - task: NuGetCommand@2
                    displayName: 'NuGet push'
                    inputs:
                      command: push
                      packagesToPush: '${{ parameters.type }}.${{ project }}.*.nupkg'
                      publishVstsFeed: '${{ feed }}'