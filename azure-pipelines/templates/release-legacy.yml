parameters:
- name: stages
  type: stageList

- name: type
  type: string

- name: artifact
  type: string
  default: current

- name: projects
  type: object

stages:
- ${{ each project in parameters.projects }}:
  - ${{ each stage in parameters.stages }}:
    - ${{ each pair in stage }}:
        ${{ if eq(pair.key, 'stage') }}:
          stage: ${{ pair.value }}_${{ project }}
        ${{ else }}:
          ${{ pair.key }}: ${{ pair.value }}
      
      displayName: ${{ stage.templateContext.environment }} ${{ project }}

      ${{ if ne(stage.templateContext.dependsOnPrefix, '') }}:
        dependsOn: ${{ stage.templateContext.dependsOnPrefix }}_${{ replace(project, '.', '_') }}

      ${{ if eq(stage.templateContext.environment, 'production') }}:
        condition: and(startsWith(variables['Build.SourceBranch'], 'refs/tags/'), contains(variables['Build.SourceBranch'], lower('/${{ project }}/v')))
      ${{ else }}:
        condition: or(not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')), and(startsWith(variables['Build.SourceBranch'], 'refs/tags/'), contains(variables['Build.SourceBranch'], lower('/${{ project }}/v'))))

      jobs:
        - deployment: Release

          pool:
            vmImage: windows-latest

          environment: ${{ stage.templateContext.serviceConnection }}

          strategy:
            runOnce:
              deploy:
                steps:
                  - download: ${{ parameters.artifact }}
                    artifact: packages-v1
                    displayName: "Download artifact"

                  - task: AzureCLI@2
                    displayName: "Publish to blob storage"
                    inputs:
                      azureSubscription: ${{ stage.templateContext.serviceConnection }}
                      scriptType: ps
                      scriptLocation: inlineScript
                      inlineScript: |
                        az storage blob upload-batch --account-name ${{ stage.templateContext.storage }} -d "packages" -s "$(Pipeline.Workspace)/${{ parameters.artifact }}/packages-v1/" --pattern "${{ project }}.*.nupkg"

                  # - task: NuGetCommand@2
                  #   displayName: 'NuGet push'
                  #   inputs:
                  #     command: push
                  #     packagesToPush: '$(System.DefaultWorkingDirectory)/_fiskaltrust.Middleware.SCU.IT/packages-v1/$(SigningPackage).*.nupkg'
                  #     publishVstsFeed: '03889fe3-67c8-414f-89bf-ecee52b3b2b1'
                  #     allowPackageConflicts: true