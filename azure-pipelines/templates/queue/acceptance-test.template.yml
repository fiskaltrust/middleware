steps:
- script: |
    dotnet tool install --tool-path tools dotnet-reportgenerator-globaltool
  displayName: Install report generator
  workingDirectory: '/'
- powershell: |   
    $nugetFeed = if ($Env:BUILD_SOURCEBRANCH.StartsWith("refs/heads/release/") -or $Env:BUILD_SOURCEBRANCH.StartsWith("refs/heads/main") -or $Env:BUILD_SOURCEBRANCH.StartsWith("refs/tags")) { "release" } else { "dev" }
    Write-Host "##vso[task.setvariable variable=NuGetFeed;]$nugetFeed"
  displayName: Set NuGet feed

- task: Cache@2
  inputs:
    key: 'nuget | "$(Agent.OS)" | queue/**/*.csproj'
    restoreKeys: |
      nuget | "$(Agent.OS)"
      nuget
    path: $(UserProfile)/.nuget/packages
  displayName: Cache NuGet packages
  
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.0.x'
  
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(WorkingDirectory)/$(Solution)'
    feedsToUse: 'select'
    vstsFeed: '$(NuGetFeed)'
  displayName: 'Restore'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '$(WorkingDirectory)/$(Solution)'
    arguments: '--configuration $(BuildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: |
      $(WorkingDirectory)/**/$(Project).csproj
    arguments: '--configuration $(BuildConfiguration) --no-restore --collect "Code coverage"'
    nobuild: true
  displayName: 'Run acceptance tests'
  env:
    CONNECTIONSTRING_AZURE_STORAGE_TESTS: $(CONNECTIONSTRING_AZURE_STORAGE_TESTS)
    CONNECTIONSTRING_POSTGRESQL_TESTS: $(CONNECTIONSTRING_POSTGRESQL_TESTS)
    CONNECTIONSTRING_MYSQL_TESTS: $(CONNECTIONSTRING_MYSQL_TESTS)
