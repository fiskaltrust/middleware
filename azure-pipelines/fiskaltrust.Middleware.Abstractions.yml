resources:
  - repo: self

trigger:
  batch: true
  branches:
    include:
      - main
      - refs/tags/queue/abstractions/*

pr: none

variables:
  - name: BuildConfiguration
    value: release
  - name: BuildPlatform
    value: any cpu
  - name: Solution
    value: "queue/fiskaltrust.Middleware.sln"
  - name: vmImageName
    value: "windows-latest"

jobs:
  - job: Test
    displayName: Unit and integration tests
    pool:
      vmImage: $(vmImageName)
    steps:
      - template: templates/queue/test.template.yml

  - job: Build
    displayName: Build job
    dependsOn: Test
    pool:
      vmImage: $(vmImageName)

    steps:
      - task: yavt@1
        inputs:
          mode: "Multi"
          updateNuspecFiles: true
          updateBuildNumber: false
          semverVersion: "v1"
          failOnTagVersionMismatch: true

      - powershell: |
          $nugetFeed = if ($Env:BUILD_SOURCEBRANCH.StartsWith("refs/heads/release/") -or $Env:BUILD_SOURCEBRANCH.StartsWith("refs/heads/master") -or $Env:BUILD_SOURCEBRANCH.StartsWith("refs/tags/v")) { "release" } else { "dev" }
          Write-Host "##vso[task.setvariable variable=NuGetFeed;]$nugetFeed"
        displayName: Set NuGet feed

      - task: DotNetCoreCLI@2
        inputs:
          command: "restore"
          projects: "$(Solution)"
          feedsToUse: "select"
          vstsFeed: "$(NuGetFeed)"
          verbosityRestore: "minimal"
        displayName: "Restore"

      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          projects: $(Solution)
          arguments: "--configuration $(BuildConfiguration) --no-restore"

      - script: dotnet pack --output $(Build.ArtifactStagingDirectory) --configuration $(buildConfiguration) --no-restore
        displayName: "dotnet pack fiskaltrust.Middleware.Abstractions"
        workingDirectory: "queue/src/fiskaltrust.Middleware.Abstractions"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: drop"
        inputs:
          PathtoPublish: "$(build.artifactstagingdirectory)"
