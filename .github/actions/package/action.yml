name: 'Build'
inputs:
  path:
    required: true
    type: string
  project:
    required: true
    type: string  

runs:
  using: "composite"
  steps:
    - name: Publish v1 Nuget packages
      shell: pwsh
      run: dotnet pack "${{ inputs.path }}/${{ inputs.project }}/${{ inputs.project }}.csproj" --no-restore --configuration Release --output ./publish/package-v1-${{ inputs.project }}

    - name: Publish v2 zip packages
      shell: pwsh
      run: |
        $version = ""

        New-Item -ItemType Directory -Force -Path ./publish/packages-v2-${{ inputs.project }}
        $csprojFile = "${{ inputs.path }}/${{ inputs.project }}/${{ inputs.project }}.csproj"

        [xml]$csprojContent = Get-Content -Path $csprojFile
        foreach ($propertyGroup in $csprojContent.Project.PropertyGroup) {
          if ($propertyGroup.MinVerTagPrefix) {
            $version = minver --verbosity error -t $($propertyGroup.MinVerTagPrefix)
            break
          }
        }

        dotnet publish $csprojFile --configuration Release -f net6 --output ./publish/raw/packages-v2/${{ inputs.project }} --no-build /p:DebugType=None /p:DebugSymbols=false
        Compress-Archive -Path ./publish/raw/packages-v2/${{ inputs.project }}/* -DestinationPath ./publish/packages-v2-${{ inputs.project }}/$version.zip

        $hash = Get-FileHash ./publish/packages-v2-${{ inputs.project }}/$version.zip -Algorithm SHA256
        $hashbytes = $hash.Hash -split '([A-F0-9]{2})' | foreach-object { if ($_) {[System.Convert]::ToByte($_,16)}}
        $hashstring = [System.Convert]::ToBase64String($hashbytes)
        $hashstring | Set-Content ./publish/packages-v2-${{ inputs.project }}/$version.zip.hash

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: package-v1-${{ inputs.project }}
        path: ./publish/package-v1-${{ inputs.project }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: package-v2-${{ inputs.project }}
        path: ./publish/package-v2-${{ inputs.project }}