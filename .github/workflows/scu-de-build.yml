name: SCU.DE CI

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      commit:
        type: string
        required: false
  pull_request:
    paths:
      - .github/workflows/**
      - scu-de/**

jobs:
  test:
    name: Test
    runs-on:  windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit }}
          fetch-depth: 0
          filter: tree:0

      - uses: ./.github/actions/build
        with:
          pattern: scu-de/fiskaltrust.Middleware.SCU.DE.sln
          configuration: Debug

      - name: Unit Tests
        uses: ./.github/actions/test
        with:
          directory: scu-de/test
          pattern: "UnitTest"
          args: '--no-build'

      - name: Acceptance Tests
        uses: ./.github/actions/test
        with:
          directory: scu-de/test
          pattern: "AcceptanceTests"
          args: '--no-build'

      - name: Integration Tests
        uses: ./.github/actions/test
        env:
          APISECRET_FISKALYCERTIFIED_TESTS: ${{ secrets.APISECRET_FISKALYCERTIFIED_TESTS }}
          APIKEY_FISKALYCERTIFIED_TESTS: ${{ secrets.APIKEY_FISKALYCERTIFIED_TESTS }}
          ADMINPIN_FISKALYCERTIFIED_TESTS: ${{ secrets.ADMINPIN_FISKALYCERTIFIED_TESTS }}
        with:
          directory: scu-de/test
          pattern: "fiskaltrust.Middleware.SCU.DE.FiskalyCertified.IntegrationTest"
          args: '--no-build'
  
  # integration-tests:
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       pattern:
  #         - "fiskaltrust.Middleware.SCU.DE.FiskalyCertified.IntegrationTest"
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Integration Tests
  #       uses: ./.github/actions/test
  #       env:
  #         APISECRET_FISKALYCERTIFIED_TESTS: "${{ secrets.APISECRET_FISKALYCERTIFIED_TESTS }}"
  #         API_KEY_FISKALY_CERTIFIED_TESTS: "${{ secrets.APIKEY_FISKALYCERTIFIED_TESTS }}"
  #         ADMIN_PIN_FISKALY_CERTIFIED_TESTS: "${{ secrets.ADMINPIN_FISKALYCERTIFIED_TESTS }}"
  #       with:
  #         directory: scu-de/test
  #         pattern: "${{ matrix.pattern }}"
  #         args: '--no-build'

  publish-test-results:
    name: Publish Tests Results
    needs: test
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: SCU.DE Test Results
          comment_mode: always
          files: "artifacts/**/*.trx"
          commit: ${{ inputs.commit }}