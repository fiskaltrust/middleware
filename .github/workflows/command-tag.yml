name: command tag
on:
  repository_dispatch:
    types: [tag-command]

permissions:
  pull-requests: write
  checks: write
  id-token: write
  contents: write

jobs:
  meta:
    runs-on: windows-latest
    outputs:
      project: ${{ steps.meta.outputs.project }}
      package: ${{ steps.meta.outputs.package }}
      directory: ${{ steps.meta.outputs.directory }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.pull_request.head.ref }}

      - id: meta
        shell: pwsh
        run: |
          $directory = "${{ github.event.client_payload.slash_command.args.unnamed.arg1 }}"
          $package = "${{ github.event.client_payload.slash_command.args.unnamed.arg2 }}"
          Write-Output "package=$package"
          Write-Output "package=$package" >> $env:GITHUB_OUTPUT
          Write-Output "directory=$directory/src"
          Write-Output "directory=$directory/src" >> $env:GITHUB_OUTPUT
          $prefix = ""
          if($directory -eq "queue") {
            $prefix = "fiskaltrust.Middleware.Queue"
          } elseif($directory -match "scu-([a-z]{2})") {
            $prefix = "fiskaltrust.Middleware.SCU.$($matches[1].ToUpper())"
          }
          $project = $(Get-Item "$directory/src/$prefix.$package").Name
          Write-Output "project=$project"
          Write-Output "project=$project" >> $env:GITHUB_OUTPUT

  tag:
    runs-on: ubuntu-latest
    needs: [meta]
    outputs:
      tag: ${{ steps.create_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.pull_request.head.ref }}
          fetch-depth: 0
          token: ${{ secrets.REPOSITORY_WRITE_PAT }}

      - name: Install nbgv
        run: dotnet tool update -g nbgv

      - name: Configure git for PAT
        run: |
          git config user.name "ReleaseBot"
          git config user.email "dev-portal-poscreator@fiskaltrust.de"
          git remote set-url origin https://x-access-token:${{ secrets.REPOSITORY_WRITE_PAT }}@github.com/${{ github.repository }}.git

      - name: Create and push tag
        id: create_tag
        if: startsWith(github.event.client_payload.pull_request.head.ref, 'release/')
        run: |
          tag=$(nbgv tag --project "${{ needs.meta.outputs.directory }}/${{ needs.meta.outputs.project }}")
          git push --tags
          echo "tag=$tag" >> "$GITHUB_OUTPUT"

  create-release:
    runs-on: ubuntu-latest
    needs: [tag]
    if: success() && needs.tag.outputs.tag != ''
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.pull_request.head.ref }}

      - name: Determine release details
        id: release_details
        run: |
          tag="${{ needs.tag.outputs.tag }}"
          echo "tag=$tag"

          # Extract version from tag (e.g., queue/sqlite/v1.3.78 -> 1.3.78)
          version="${tag##*/v}"
          echo "version=$version"
          echo "version=$version" >> "$GITHUB_OUTPUT"

          # Determine if it's a prerelease (contains -rc)
          if [[ "$version" == *"-rc"* ]]; then
            echo "prerelease=true"
            echo "prerelease=true" >> "$GITHUB_OUTPUT"
            release_body="This is a release candidate version."
          else
            echo "prerelease=false"
            echo "prerelease=false" >> "$GITHUB_OUTPUT"
            release_body="Release notes: https://docs.fiskaltrust.cloud/changelog/middleware/$version"
          fi
          echo "release_body=$release_body"
          echo "release_body=$release_body" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.tag.outputs.tag }}
          name: ${{ needs.tag.outputs.tag }}
          body: ${{ steps.release_details.outputs.release_body }}
          prerelease: ${{ steps.release_details.outputs.prerelease }}
          token: ${{ secrets.REPOSITORY_WRITE_PAT }}

  success:
    needs:
      - tag
      - create-release
    runs-on: ubuntu-latest
    if: ${{ !failure() && !cancelled() }}
    steps:
      - name: Add reaction
        uses: peter-evans/create-or-update-comment@v4
        with:
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reactions: hooray
          reactions-edit-mode: replace

  failure:
    needs:
      - tag
      - create-release
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Add reaction
        uses: peter-evans/create-or-update-comment@v4
        with:
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reactions: confused
          reactions-edit-mode: replace
          edit-mode: replace
          body: |
            /${{ github.event.client_payload.slash_command.command }} ${{ github.event.client_payload.slash_command.args.all }}
            [![](https://badgen.net/static/${{ github.event.client_payload.slash_command.command }}%20${{ github.run_id }}/failure/red)](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
