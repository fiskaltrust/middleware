name: command tag 
on:
  repository_dispatch:
    types: [tag-command]

permissions:
  pull-requests: write
  checks: write
  id-token: write
  contents: read

jobs:
  meta:
    needs: []
    runs-on: windows-latest
    outputs:
      project: ${{ steps.meta.outputs.project }}
      package: ${{ steps.meta.outputs.package }}
      directory: ${{ steps.meta.outputs.directory }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.pull_request.head.sha }}

      - id: meta
        shell: pwsh
        run: |
          $directory = "${{ github.event.client_payload.slash_command.args.unnamed.arg1 }}"
          $package = "${{ github.event.client_payload.slash_command.args.unnamed.arg2 }}"
          Write-Output "package=$package"
          Write-Output "package=$package" >> $env:GITHUB_OUTPUT
          Write-Output "directory=$directory/src"
          Write-Output "directory=$directory/src" >> $env:GITHUB_OUTPUT
          $prefix = ""
          if($directory -eq "queue") {
            $prefix = "fiskaltrust.Middleware.Queue"
          } elseif($directory -match "scu-([a-z]{2})") {
            $prefix = "fiskaltrust.Middleware.SCU.$($matches[1].ToUpper())"
          }
          $project = $(Get-Item "$directory/src/$prefix.$package").Name
          Write-Output "project=$project"
          Write-Output "project=$project" >> $env:GITHUB_OUTPUT
    
  tag:
    runs-on: ubuntu-latest
    needs: [meta]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.pull_request.head.sha }}
          fetch-depth: 0

      - name: Install nbgv
        run: dotnet tool update -g nbgv

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and push tag
        run: |
          nbgv tag --project ${{ needs.meta.outputs.directory }}/${{ needs.meta.outputs.project }}
          git push --tags

  success:
    needs:
      - tag
    runs-on: ubuntu-latest
    if: success('package') && !failure('deploy')
    steps:
      - name: Add reaction
        uses: peter-evans/create-or-update-comment@v4
        with:
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reactions: hooray
          reactions-edit-mode: replace
          edit-mode: replace
          body: |
            /${{ github.event.client_payload.slash_command.command }} ${{ github.event.client_payload.slash_command.args.all }}
            [![](https://badgen.net/static/${{ github.event.client_payload.slash_command.command }}%20${{ github.run_id }}/success/green)](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
    
  failure:
    needs:
      - tag
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Add reaction
        uses: peter-evans/create-or-update-comment@v4
        with:
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reactions: confused
          reactions-edit-mode: replace
          edit-mode: replace
          body: |
            /${{ github.event.client_payload.slash_command.command }} ${{ github.event.client_payload.slash_command.args.all }}
            [![](https://badgen.net/static/${{ github.event.client_payload.slash_command.command }}%20${{ github.run_id }}/failure/red)](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
