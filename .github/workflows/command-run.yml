name: Command Run
on:
  repository_dispatch:
    types: [run-command]

permissions:
  pull-requests: write
  checks: write

jobs:
  queue-acceptance-tests:
    concurrency:
      group: queue-acceptance-tests
    if: github.event.client_payload.slash_command.args.unnamed.arg1 == 'queue' && github.event.client_payload.slash_command.args.unnamed.arg2 == 'acceptance-tests'
    uses: ./.github/workflows/queue-acceptance-tests.yml
    secrets: inherit
    with:
      commit: ${{ github.event.client_payload.pull_request.head.sha }}
      only: ${{ github.event.client_payload.slash_command.args.unnamed.arg3 && format('fiskaltrust.Middleware.Storage.{0}.AcceptanceTest', github.event.client_payload.slash_command.args.unnamed.arg3) || '' }}

  queue-build:
    if: github.event.client_payload.slash_command.args.unnamed.arg1 == 'queue' && (github.event.client_payload.slash_command.args.unnamed.arg2 == 'ci' || github.event.client_payload.slash_command.args.unnamed.arg2 == 'build')
    uses: ./.github/workflows/queue-build.yml
    secrets: inherit
    with:
      commit: ${{ github.event.client_payload.pull_request.head.sha }}
  
  scu-at-build:
    if: github.event.client_payload.slash_command.args.unnamed.arg1 == 'scu-at' && (github.event.client_payload.slash_command.args.unnamed.arg2 == 'ci' || github.event.client_payload.slash_command.args.unnamed.arg2 == 'build')
    uses: ./.github/workflows/scu-at-build.yml
    secrets: inherit
    with:
      commit: ${{ github.event.client_payload.pull_request.head.sha }}


  scu-de-build:
    if: github.event.client_payload.slash_command.args.unnamed.arg1 == 'scu-de' && (github.event.client_payload.slash_command.args.unnamed.arg2 == 'ci' || github.event.client_payload.slash_command.args.unnamed.arg2 == 'build')
    uses: ./.github/workflows/scu-de-build.yml
    secrets: inherit
    with:
      commit: ${{ github.event.client_payload.pull_request.head.sha }}

  scu-es-build:
    if: github.event.client_payload.slash_command.args.unnamed.arg1 == 'scu-es' && (github.event.client_payload.slash_command.args.unnamed.arg2 == 'ci' || github.event.client_payload.slash_command.args.unnamed.arg2 == 'build')
    uses: ./.github/workflows/scu-es-build.yml
    secrets: inherit
    with:
      commit: ${{ github.event.client_payload.pull_request.head.sha }}
    
  scu-it-build:
    if: github.event.client_payload.slash_command.args.unnamed.arg1 == 'scu-it' && (github.event.client_payload.slash_command.args.unnamed.arg2 == 'ci' || github.event.client_payload.slash_command.args.unnamed.arg2 == 'build')
    uses: ./.github/workflows/scu-it-build.yml
    secrets: inherit
    with:
      commit: ${{ github.event.client_payload.pull_request.head.sha }}

  success:
    needs:
      - queue-acceptance-tests
      - queue-build
      - scu-at-build
      - scu-de-build
      - scu-es-build
      - scu-it-build
    runs-on: ubuntu-latest
    if: (!failure())
    steps:
      - name: Add reaction
        uses: peter-evans/create-or-update-comment@v4
        with:
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reactions: hooray
          reactions-edit-mode: replace
          edit-mode: replace
          body: |
            /${{ github.event.client_payload.slash_command.command }} ${{ github.event.client_payload.slash_command.args.all }}

  failure:
    needs:
      - queue-acceptance-tests
      - queue-build
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Add reaction
        uses: peter-evans/create-or-update-comment@v4
        with:
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reactions: confused
          reactions-edit-mode: replace
          edit-mode: replace
          body: |
            /${{ github.event.client_payload.slash_command.command }} ${{ github.event.client_payload.slash_command.args.all }}
            [![](https://badgen.net/static/${{ github.event.client_payload.slash_command.command }}%20${{ github.run_id }}/failed/red)](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})