name: Prepare Release

on:
  workflow_dispatch:
  
jobs:
  prepare-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0 
          token: ${{ secrets.REPOSITORY_WRITE_PAT }}

      - name: Install nbgv
        run: dotnet tool update -g nbgv  
    
      - name: Configure git for PAT
        run: |
            git config user.name "Release Bot"
            git config user.email "dev-portal-poscreator@fiskaltrust.de"
            git remote set-url origin https://x-access-token:${{ secrets.REPOSITORY_WRITE_PAT }}@github.com/${{ github.repository }}.git
     
      - name: Prepare release branch with nbgv
        id: prepare-release
        run: |
            output=$(nbgv prepare-release rc)       
            #echo "$output"
            BRANCH=$(echo "$output" | grep -oE 'release/[^ ]+')
            echo "release_branch=$BRANCH"
            echo "release_branch=$BRANCH" >> $GITHUB_OUTPUT

            version=${BRANCH#release/v}
            echo "release_version=$version"
            echo "release_version=$version" >> $GITHUB_OUTPUT

      - name: Push changes
        run: |          
           # Push release branch bump (1.x -rc version)
           git checkout ${{ steps.prepare-release.outputs.release_branch }}
           git push origin HEAD:${{ steps.prepare-release.outputs.release_branch }}           
                             
           # Push main branch changes (next -ci version)
           #git checkout main
           #git push origin main --force 
           
      - name: Create Pull Request via gh CLI
        run: |
          gh auth login --with-token <<< "${{ secrets.REPOSITORY_WRITE_PAT }}"
          #git fetch origin main
          #git fetch origin ${{ steps.prepare-release.outputs.release_branch }}
          #git checkout main
          #git reset --hard origin/main
          git checkout ${{ steps.prepare-release.outputs.release_branch }}  
          gh pr create \
            --title "Prepare release v${{ steps.prepare-release.outputs.release_version }}" \
            --body "This PR prepares the release branch for version \`${{ steps.prepare-release.outputs.release_version }}\`.Sets release branch version to \`${{ steps.prepare-release.outputs.release_version }}-rc\`." \
            --base main \
            --head ${{ steps.prepare-release.outputs.release_branch }}
            
      - name: Push only version.json change to main
        run: |
          git fetch origin main
          git checkout main
          git reset --soft origin/main
          git add version.json
          if ! git diff --cached --quiet; then
            git commit -m "Set version to next -ci version"
            git push origin main
          else
            echo "No changes in version.json to push."
          fi
