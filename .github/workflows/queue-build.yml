name: Queue CI

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      commit:
        type: string
        required: false
  pull_request:
    paths:
      - .github/workflows/**
      - queue/**

jobs:
  test:
    name: Test
    runs-on:  windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit }} 
          fetch-depth: 0
          filter: tree:0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.x
            8.0.x
  
      - run: |
          dotnet restore "${{ inputs.solution }}"
          dotnet publish --no-restore -f net461
          dotnet publish --no-restore -f netstandard2.0
          dotnet publish --no-restore -f netstandard2.1
        working-directory: queue/src/fiskaltrust.Middleware.Queue.SQLite
        name: Publish SQLite extras

      - uses: ./.github/actions/build
        with:
          solution: queue/fiskaltrust.Middleware.sln

      - name: Unit Tests
        uses: ./.github/actions/test
        with:
          directory: queue/test
          pattern: "UnitTest"
          args: '--no-build'
        env:
          CONNECTIONSTRING_AZURE_STORAGE_TESTS: ${{ secrets.CONNECTIONSTRING_AZURE_STORAGE_TESTS }}
          CONNECTIONSTRING_POSTGRESQL_TESTS: ${{ secrets.CONNECTIONSTRING_POSTGRESQL_TESTS }}
          CONNECTIONSTRING_MYSQL_TESTS: ${{ secrets.CONNECTIONSTRING_MYSQL_TESTS }}

      - name: Unit Tests
        uses: ./.github/actions/test
        with:
          directory: queue/test
          pattern: "IntegrationTest"
          args: '--no-build'
        env:
          CONNECTIONSTRING_AZURE_STORAGE_TESTS: ${{ secrets.CONNECTIONSTRING_AZURE_STORAGE_TESTS }}
          CONNECTIONSTRING_POSTGRESQL_TESTS: ${{ secrets.CONNECTIONSTRING_POSTGRESQL_TESTS }}
          CONNECTIONSTRING_MYSQL_TESTS: ${{ secrets.CONNECTIONSTRING_MYSQL_TESTS }}

  publish-test-results:
    name: Publish Tests Results
    needs: test
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: Queue Test Results
          files: "artifacts/**/*.trx"